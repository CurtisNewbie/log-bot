mode.production: true

app.name: "logbot"

mysql:
  enabled: true
  user: "${mysqlusername}"
  password: "${mysqlpassword}"
  database: "logbot"
  host: "${mysqladdr}"
  port: 3306

redis:
  enabled: true
  address: "redis"
  port: 6379
  username:
  password:
  database: 0

server:
  host: "0.0.0.0"
  port: 8087
  gracefulShutdownTimeSec: 5
  perf.enabled: false

consul:
  enabled: true
  consulAddress: consul:8500
  healthCheckUrl: /health

rabbitmq:
  enabled: true
  host: "rabbitmq"
  port: 5672
  username: "${rabbitmqusername}"
  password: "${rabbitmqpassword}"
  vhost: "/"

logging.rolling.file: "/usr/src/logs/${app.name}.log"

logbot:
  node: docker-compose-1
  watch:
    - app: goauth
      type: go
      file: /usr/src/logs/watch/goauth.log
    - app: hammer
      type: go
      file: /usr/src/logs/watch/hammer.log
    - app: vfm
      type: go
      file: /usr/src/logs/watch/vfm.log
    - app: mini-fstore
      type: go
      file: /usr/src/logs/watch/mini-fstore.log

    # - app: dtaskgo
    #   type: go
    #   file: /usr/src/logs/watch/dtaskgo.log
    # - app: fantahsea
    #   type: go
    #   file: /usr/src/logs/watch/fantahsea.log
    # - app: auth-gateway
    #   type: java
    #   file: /usr/src/logs/watch/auth-gateway.log
    # - app: auth-service
    #   type: java
    #   file: /usr/src/logs/watch/auth-service.log

task.remove-error-log: true